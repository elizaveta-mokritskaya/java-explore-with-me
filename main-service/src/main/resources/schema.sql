drop table if exists users cascade;
create table if not exists users
(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name varchar(250) not null,
    email varchar(254) not null,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
    );

drop table if exists categories cascade;
create table if not exists categories
    (
        id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
        name varchar(500) not null,
        CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
        );

drop table if exists locations cascade;
create table if not exists locations
    (
        id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
        lat float,
        lon float
        );

drop table if exists events cascade;
create table if not exists events
    (
        id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        annotation         VARCHAR(2000) NOT NULL,
        category_id        BIGINT,
        confirmed_requests BIGINT,
        created_on         TIMESTAMP WITHOUT TIME ZONE,
        description        VARCHAR(7000) NOT NULL,
        event_date         TIMESTAMP WITHOUT TIME ZONE,
        initiator_id       BIGINT,
        location_id        BIGINT,
        paid               BOOLEAN,
        participant_limit  BIGINT,
        published_on       TIMESTAMP WITHOUT TIME ZONE,
        request_moderation BOOLEAN,
        state              VARCHAR(120),
        title              VARCHAR(120),
        views              BIGINT,
        FOREIGN KEY (location_id) REFERENCES locations (id),
        FOREIGN KEY (category_id) REFERENCES categories (id),
        FOREIGN KEY (initiator_id) REFERENCES users (id)
    );

drop table if exists compilations cascade;
create table if not exists compilations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN      NOT NULL,
    title  VARCHAR(120) NOT NULL,
    CONSTRAINT UQ_TITLE_COMPILATION UNIQUE (title)
);

drop table if exists requests cascade;
create table if not exists requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP WITHOUT TIME ZONE,
    event_id     BIGINT,
    status       VARCHAR(100),
    requester_id BIGINT,
    FOREIGN KEY (event_id) REFERENCES events (id),
    FOREIGN KEY (requester_id) REFERENCES users (id)
);

drop table if exists event_compilations cascade;
create table if not exists event_compilations
(
    compilation_id BIGINT NOT NULL REFERENCES compilations (id) ON DELETE CASCADE,
    event_id       BIGINT NOT NULL REFERENCES events (id) ON DELETE CASCADE
);