drop table if exists users cascade;
create table if not exists users
(
    id bigint generated always as identity primary key,
    name varchar(250) not null,
    email varchar(254) not null,
    constraint uq_user_email unique (email)
    );

drop table if exists categories cascade;
create table if not exists categories
    (
        id bigint generated always as identity primary key,
        name varchar(500) not null,
        constraint uq_category_name unique (name)
        );

drop table if exists locations cascade;
create table if not exists locations
    (
        id bigint generated always as identity primary key,
        lat float,
        lon float
        );

drop table if exists events cascade;
create table if not exists events
    (
        id                 bigint generated by default as identity primary key,
        annotation         varchar(2000) not null,
        category_id        bigint,
        confirmed_requests bigint,
        created_on         timestamp without time zone,
        description        varchar(7000) not null,
        event_date         timestamp without time zone,
        initiator_id       bigint,
        location_id        bigint,
        paid               boolean,
        participant_limit  bigint,
        published_on       timestamp without time zone,
        request_moderation boolean,
        state              varchar(120),
        title              varchar(120),
        views              bigint,
        foreign key (location_id) references locations (id),
        foreign key (category_id) references categories (id),
        foreign key (initiator_id) references users (id)
    );

drop table if exists compilations cascade;
create table if not exists compilations
(
    id  bigint generated by default as identity primary key,
    pinned boolean      not null,
    title  varchar(120) not null,
    constraint uq_title_compilation unique (title)
);

drop table if exists requests cascade;
create table if not exists requests
(
    id           bigint generated by default as identity primary key,
    created      timestamp without time zone,
    event_id     bigint,
    status       varchar(100),
    requester_id bigint,
    foreign key (event_id) references events (id),
    foreign key (requester_id) references users (id)
);

drop table if exists event_compilations cascade;
create table if not exists event_compilations
(
    compilation_id bigint not null references compilations (id) on delete cascade,
    event_id       bigint not null references events (id) on delete cascade
);

drop table if exists comments cascade;
create table if not exists comments (
    id bigint generated by default as identity primary key,
    created_on timestamp without time zone not null,
    event_id bigint not null,
    author_id bigint not null,
    comment_text varchar(2000) not null,
    foreign key (event_id) references events (id),
    foreign key (author_id) references users (id)
);